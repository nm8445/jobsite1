---
layout: layouts/default.njk  
title: Job Listings      
pagination:                  
 
  data: jobs                 
  
  size: 6                    
  
  alias: job                 
---
<!-- Creates a container with margin at the top and bottom. -->
<div class="container my-5"> 

  <!-- Search Bar and Filters Section -->
  <div class="d-flex justify-content-between mb-4">
    <!-- Search Bar -->
    <input id="search-bar" type="text" class="form-control w-50" placeholder="Search for jobs..." onkeyup="filterJobs()" />

    <!-- Filter by Job Type -->
    <select id="type-filter" class="form-control w-25" onchange="filterJobs()">
      <option value="">Filter by Job Type</option>
      <option value="Full-time">Full-time</option>
      <option value="Part-time">Part-time</option>
      <option value="Internship">Internship</option>
      <option value="Contract">Contract</option>
      <option value="Volunteer">Volunteer</option> <!-- Added Volunteer option -->
    </select>

    <!-- Filter by Education -->
    <select id="education-filter" class="form-control w-25" onchange="filterJobs()">
      <option value="">Filter by Education</option>
      <option value="High School">High School</option>
      <option value="College">College</option>
      <option value="Bachelor's Degree">Bachelor's Degree</option>
      <option value="Master's Degree">Master's Degree</option>
      <option value="PhD">PhD</option>
    </select>

    <!-- Filter by Salary -->
    <select id="salary-filter" class="form-control w-25" onchange="filterJobs()">
      <option value="">Filter by Salary</option>
      <option value="0-30000">$0 - $30,000</option>
      <option value="30000-50000">$30,000 - $50,000</option>
      <option value="50000-70000">$50,000 - $70,000</option>
      <option value="70000+">$70,000+</option>
    </select>
  </div>

  <!-- Creates an ordered list for job posts with a bottom margin. -->
  <ol id="job-posts" class="list-group mb-3">
    <!-- Loops through the job listings on this page. -->
    {% for job in pagination.items %}
      <!-- Each job will be listed as an item in the list. -->
      <li class="list-group-item">
        <!-- Make the job title a clickable link to the job detail page. -->
        <h5 class="mb-1"><a href="/Jobs/{{ job.title | slug }}/">{{ job.title }}</a></h5>
        <!-- The job title becomes a clickable link, and the 'slug' function makes the title URL-friendly. -->
        <p class="card-text">{{ job.location }}</p>
        <!-- Shows the location of the job. -->
        <div>
          <!-- Creates an unordered list for additional job details. -->
          <ul>
            <!-- Loops through each detail of the job. -->
            {% for detail in job.details %}
            <!-- Displays each job detail as a list item. -->
            <li>{{ detail }}</li>
            {% endfor %}
          </ul>
        </div>
      </li>
    {% endfor %}
  </ol>

  <!-- Pagination Controls -->
  <!-- Creates a navigation bar for the pagination controls. -->
  <nav aria-label="Page navigation">
    <!-- Creates a list for the pagination items, centered. -->
    <ul id="pagination" class="pagination justify-content-center">
      <!-- Checks if there is a previous page. -->
      {% if pagination.href.previous %}
        <li class="page-item">
          <a class="page-link" href="{{ pagination.href.previous }}" aria-label="Previous">
            <span aria-hidden="true">&laquo; Previous</span>
            <!-- If there is a previous page, display the "Previous" link. -->
          </a>
        </li>
      {% endif %}

      <!-- Checks if there is a next page. -->
      {% if pagination.href.next %}
        <li class="page-item">
          <a class="page-link" href="{{ pagination.href.next }}" aria-label="Next">
            <span aria-hidden="true">Next &raquo;</span>
            <!-- If there is a next page, display the "Next" link. -->
          </a>
        </li>
      {% endif %}
    </ul>
  </nav>
</div>

<!-- Search and Filter Logic -->
<script>
  function filterJobs() {

	  // Get the search query from the search bar
    var searchQuery = document.getElementById('search-bar').value.toLowerCase();
    var jobItems = document.querySelectorAll('.job-item');

	  // Get the values of the selected filters
    var jobTypeFilter = document.getElementById('type-filter').value.toLowerCase();
    var educationFilter = document.getElementById('education-filter').value.toLowerCase();
    var salaryFilter = document.getElementById('salary-filter').value;

	  // Loop through each job item and check if it matches the filters
    jobItems.forEach(function(job) {
      var jobTitle = job.querySelector('h5').textContent.toLowerCase();
      var jobType = job.getAttribute('data-type').toLowerCase();
      var education = job.getAttribute('data-education').toLowerCase();
      var salary = job.getAttribute('data-salary');

      // Check if the job matches the search query and selected filters
      var matchesSearch = jobTitle.includes(searchQuery);
      var matchesType = !jobTypeFilter || jobType.includes(jobTypeFilter);
      var matchesEducation = !educationFilter || education.includes(educationFilter);
      var matchesSalary = !salaryFilter || matchesSalaryRange(salary, salaryFilter);
	
	    // If all the conditions are met, show the job; otherwise, hide it
      if (matchesSearch && matchesType && matchesEducation && matchesSalary) {
        job.style.display = 'block';
      } else {
        job.style.display = 'none';
      }
    });
  }

  // Function to match filter salary to the salary of the listed position
  function matchesSalaryRange(jobSalary, filterSalary) {
    if (!jobSalary) return false;
    var salaryRange = filterSalary.split('-');
    // Removes non-numeric characters
    var jobSalaryValue = parseInt(jobSalary.replace(/\D/g, '')); 

    // If the salary filter has a '+', only check if the job's salary is above the minimum
    if (filterSalary.includes('+')) {
      return jobSalaryValue >= parseInt(salaryRange[0]);
      // Otherwise, ensure the salary is within the specified range (min and max)
    } else {
      return jobSalaryValue >= parseInt(salaryRange[0]) && jobSalaryValue <= parseInt(salaryRange[1]);
    }
  }
</script>